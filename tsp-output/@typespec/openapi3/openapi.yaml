openapi: 3.0.0
info:
  title: SwitchBot API
  version: "1.1"
  description: SwitchBot API methods for IoT devices
tags: []
paths:
  /devices:
    get:
      operationId: DevicesRoute_list
      description: The devices API is used to access the properties and states of SwitchBot devices and to send control commands to those devices.
      parameters: []
      responses:
        "190":
          description: Informational
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SystemErrorResponseBody"
        "200":
          description: The request has succeeded.
          content:
            application/json:
              schema:
                anyOf:
                  - type: object
                    required:
                      - statusCode
                      - message
                      - body
                    properties:
                      statusCode:
                        type: number
                        enum:
                          - 100
                      message:
                        type: string
                        enum:
                          - success
                      body:
                        type: object
                        properties:
                          deviceList:
                            type: array
                            items:
                              anyOf:
                                - $ref: "#/components/schemas/Device.Bot"
                                - $ref: "#/components/schemas/Device.Curtain"
                                - $ref: "#/components/schemas/Device.Curtain3"
                                - $ref: "#/components/schemas/Device.HubRelated"
                                - $ref: "#/components/schemas/Device.Meter"
                                - $ref: "#/components/schemas/Device.MeterPlus"
                                - $ref: "#/components/schemas/Device.MotionSensor"
                                - $ref: "#/components/schemas/Device.ContactSensor"
                                - $ref: "#/components/schemas/Device.Lock"
                                - $ref: "#/components/schemas/Device.Plug"
                                - $ref: "#/components/schemas/Device.Remote"
                                - $ref: "#/components/schemas/Device.Thermostat"
                                - $ref: "#/components/schemas/Device.Camera"
                                - $ref: "#/components/schemas/Device.Humidifier"
                            description: a list of physical devices
                          infraredRemoteList:
                            type: array
                            items:
                              anyOf:
                                - $ref: "#/components/schemas/Device.Bot"
                                - $ref: "#/components/schemas/Device.Curtain"
                                - $ref: "#/components/schemas/Device.Curtain3"
                                - $ref: "#/components/schemas/Device.HubRelated"
                                - $ref: "#/components/schemas/Device.Meter"
                                - $ref: "#/components/schemas/Device.MeterPlus"
                                - $ref: "#/components/schemas/Device.MotionSensor"
                                - $ref: "#/components/schemas/Device.ContactSensor"
                                - $ref: "#/components/schemas/Device.Lock"
                                - $ref: "#/components/schemas/Device.Plug"
                                - $ref: "#/components/schemas/Device.Remote"
                                - $ref: "#/components/schemas/Device.Thermostat"
                                - $ref: "#/components/schemas/Device.Camera"
                                - $ref: "#/components/schemas/Device.Humidifier"
                            description: a list of virtual infrared remote devices
                        required:
                          - deviceList
                          - infraredRemoteList
                    description: Returns an object that contains two device lists
                  - $ref: "#/components/schemas/SharedErrors.BadRequestResponse"
                  - $ref: "#/components/schemas/SharedErrors.UnauthorizedResponse"
                  - $ref: "#/components/schemas/SharedErrors.ForbiddenResponse"
                  - $ref: "#/components/schemas/SharedErrors.NotFoundResponse"
                  - $ref: "#/components/schemas/SharedErrors.NotAcceptableResponse"
                  - $ref: "#/components/schemas/SharedErrors.UnsupportedMediaTypeResponse"
                  - $ref: "#/components/schemas/SharedErrors.UnprocessableEntityResponse"
                  - $ref: "#/components/schemas/SharedErrors.TooManyRequestsResponse"
                  - $ref: "#/components/schemas/SharedErrors.InternalServerErrorResponse"
  /devices/{deviceId}/commands:
    post:
      operationId: DevicesRoute_control
      description: Send control commands to physical devices and virtual infrared remote devices.
      parameters:
        - name: deviceId
          in: path
          required: true
          schema:
            type: string
      responses:
        "190":
          description: Informational
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SystemErrorResponseBody"
        "200":
          description: The request has succeeded.
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/SharedErrors.BadRequestResponse"
                  - $ref: "#/components/schemas/SharedErrors.UnauthorizedResponse"
                  - $ref: "#/components/schemas/SharedErrors.ForbiddenResponse"
                  - $ref: "#/components/schemas/SharedErrors.NotFoundResponse"
                  - $ref: "#/components/schemas/SharedErrors.NotAcceptableResponse"
                  - $ref: "#/components/schemas/SharedErrors.UnsupportedMediaTypeResponse"
                  - $ref: "#/components/schemas/SharedErrors.UnprocessableEntityResponse"
                  - $ref: "#/components/schemas/SharedErrors.TooManyRequestsResponse"
                  - $ref: "#/components/schemas/SharedErrors.InternalServerErrorResponse"
                  - $ref: "#/components/schemas/DeviceControl.DeviceTypeErrorResponseBody"
                  - $ref: "#/components/schemas/DeviceControl.DeviceNotFoundErrorResponseBody"
                  - $ref: "#/components/schemas/DeviceControl.CommandNotSupportedErrorResponseBody"
                  - $ref: "#/components/schemas/DeviceControl.DeviceOfflineErrorResponseBody"
                  - $ref: "#/components/schemas/DeviceControl.HubDeviceOfflineErrorResponseBody"
        "201":
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                type: object
                required:
                  - statusCode
                  - message
                  - body
                properties:
                  statusCode:
                    type: number
                    enum:
                      - 100
                  message:
                    type: string
                    enum:
                      - success
                  body:
                    type: object
                    properties:
                      commandId:
                        type: string
                    required:
                      - commandId
                description: Returns an object that contains two device lists
      requestBody:
        required: true
        content:
          application/json:
            schema:
              anyOf:
                - $ref: "#/components/schemas/DeviceControl.BotCommand"
                - type: object
                  properties:
                    commandType:
                      type: string
                      enum:
                        - command
                    command:
                      type: string
                      enum:
                        - setPosition
                    parameter:
                      type: string
                      description: "mode: 0 (Performance Mode), 1 (Silent Mode), ff (default mode) position: 0~100 (0 means open, 100 means closed)"
                  required:
                    - commandType
                    - command
                    - parameter
                - type: object
                  properties:
                    commandType:
                      type: string
                      enum:
                        - command
                    command:
                      type: string
                      enum:
                        - turnOff
                        - turnOn
                        - pause
                  required:
                    - commandType
                    - command
                - $ref: "#/components/schemas/DeviceControl.HubRelatedCommand"
                - $ref: "#/components/schemas/DeviceControl.MeterCommand"
                - $ref: "#/components/schemas/DeviceControl.MeterPlusCommand"
                - $ref: "#/components/schemas/DeviceControl.MotionSensorCommand"
                - $ref: "#/components/schemas/DeviceControl.ContactSensorCommand"
                - $ref: "#/components/schemas/DeviceControl.LockCommand"
                - $ref: "#/components/schemas/DeviceControl.PlugCommand"
                - $ref: "#/components/schemas/DeviceControl.RemoteCommand"
                - type: object
                  properties:
                    commandType:
                      type: string
                      enum:
                        - command
                    command:
                      type: string
                      enum:
                        - setTemperature
                    parameter:
                      type: string
                      description: Temperature value to set
                  required:
                    - commandType
                    - command
                    - parameter
                - type: object
                  properties:
                    commandType:
                      type: string
                      enum:
                        - command
                    command:
                      type: string
                      enum:
                        - setMode
                    parameter:
                      type: string
                      description: "Mode: heat, cool, auto, off"
                  required:
                    - commandType
                    - command
                    - parameter
                - $ref: "#/components/schemas/DeviceControl.CameraCommand"
                - $ref: "#/components/schemas/DeviceControl.HumidifierCommand"
  /devices/{id}/status:
    get:
      operationId: DevicesRoute_readStatus
      description: Get the status of a physical device that has been added to the current user's account.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "190":
          description: Informational
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SystemErrorResponseBody"
        "200":
          description: The request has succeeded.
          content:
            application/json:
              schema:
                anyOf:
                  - type: object
                    required:
                      - statusCode
                      - message
                      - body
                    properties:
                      statusCode:
                        type: number
                        enum:
                          - 100
                      message:
                        type: string
                        enum:
                          - success
                      body:
                        anyOf:
                          - $ref: "#/components/schemas/DeviceStatus.BotStatus"
                          - $ref: "#/components/schemas/DeviceStatus.CurtainStatus"
                          - $ref: "#/components/schemas/DeviceStatus.CurtainStatus"
                          - $ref: "#/components/schemas/DeviceStatus.HubRelatedStatus"
                          - $ref: "#/components/schemas/DeviceStatus.MeterStatus"
                          - $ref: "#/components/schemas/DeviceStatus.MeterPlusStatus"
                          - $ref: "#/components/schemas/DeviceStatus.MotionSensorStatus"
                          - $ref: "#/components/schemas/DeviceStatus.ContactSensorStatus"
                          - $ref: "#/components/schemas/DeviceStatus.LockStatus"
                          - $ref: "#/components/schemas/DeviceStatus.PlugStatus"
                          - $ref: "#/components/schemas/DeviceStatus.RemoteStatus"
                          - $ref: "#/components/schemas/DeviceStatus.ThermostatStatus"
                          - $ref: "#/components/schemas/DeviceStatus.CameraStatus"
                          - $ref: "#/components/schemas/DeviceStatus.HumidifierStatus"
                    description: Returns an object that contains two device lists
                  - $ref: "#/components/schemas/SharedErrors.BadRequestResponse"
                  - $ref: "#/components/schemas/SharedErrors.UnauthorizedResponse"
                  - $ref: "#/components/schemas/SharedErrors.ForbiddenResponse"
                  - $ref: "#/components/schemas/SharedErrors.NotFoundResponse"
                  - $ref: "#/components/schemas/SharedErrors.NotAcceptableResponse"
                  - $ref: "#/components/schemas/SharedErrors.UnsupportedMediaTypeResponse"
                  - $ref: "#/components/schemas/SharedErrors.UnprocessableEntityResponse"
                  - $ref: "#/components/schemas/SharedErrors.TooManyRequestsResponse"
                  - $ref: "#/components/schemas/SharedErrors.InternalServerErrorResponse"
components:
  schemas:
    Device.BaseCurtain:
      type: object
      required:
        - curtainDevicesIds
        - calibrate
        - group
        - master
        - openDirection
      properties:
        curtainDevicesIds:
          type: array
          items:
            type: string
          description: Array a list of Curtain device IDs such that the Curtain devices are being paired or grouped
        calibrate:
          type: boolean
          description: determines if the open position and the close position of a device have been properly calibrated or not
        group:
          type: boolean
          description: determines if a Curtain is paired with or grouped with another Curtain or not
        master:
          type: boolean
          description: determines if a Curtain is the master device or not when paired with or grouped with another Curtain
        openDirection:
          type: string
          description: the opening direction of a Curtain
      allOf:
        - $ref: "#/components/schemas/Device.BaseDevice"
    Device.BaseDevice:
      type: object
      required:
        - deviceId
        - deviceName
        - enableCloudService
        - hubDeviceId
      properties:
        deviceId:
          type: string
          description: device ID
        deviceName:
          type: string
          description: device name
        enableCloudService:
          type: boolean
          description: determines if Cloud Service is enabled or not for the current device
        hubDeviceId:
          type: string
          description: device's parent Hub ID
        deviceType:
          type: string
          description: Discriminator property for BaseDevice.
      discriminator:
        propertyName: deviceType
        mapping:
          Curtain: "#/components/schemas/Device.Curtain"
          Curtain3: "#/components/schemas/Device.Curtain3"
          Hub: "#/components/schemas/Device.HubRelated"
          Hub Plus: "#/components/schemas/Device.HubRelated"
          Hub Mini: "#/components/schemas/Device.HubRelated"
          Hub 2: "#/components/schemas/Device.HubRelated"
          Meter: "#/components/schemas/Device.Meter"
          MeterPlus: "#/components/schemas/Device.MeterPlus"
          MotionSensor: "#/components/schemas/Device.MotionSensor"
          ContactSensor: "#/components/schemas/Device.ContactSensor"
          Lock: "#/components/schemas/Device.Lock"
          Plug: "#/components/schemas/Device.Plug"
          Remote: "#/components/schemas/Device.Remote"
          Thermostat: "#/components/schemas/Device.Thermostat"
          Camera: "#/components/schemas/Device.Camera"
          Humidifier: "#/components/schemas/Device.Humidifier"
    Device.Bot:
      type: object
      required:
        - deviceType
      properties:
        deviceType:
          type: string
          enum:
            - Bot
          description: device type
      allOf:
        - $ref: "#/components/schemas/Device.BaseDevice"
    Device.Camera:
      type: object
      required:
        - deviceType
        - status
        - fieldOfView
      properties:
        deviceType:
          type: string
          enum:
            - Camera
          description: device type
        status:
          type: string
          enum:
            - Online
            - Offline
          description: current status of the camera
        fieldOfView:
          type: number
          description: field of view of the camera in degrees
      allOf:
        - $ref: "#/components/schemas/Device.BaseDevice"
    Device.ContactSensor:
      type: object
      required:
        - deviceType
        - open
        - moveDetected
        - luminance
      properties:
        deviceType:
          type: string
          enum:
            - ContactSensor
          description: device type
        open:
          type: boolean
          description: detected open status
        moveDetected:
          type: boolean
          description: detected move status
        luminance:
          type: number
          description: luminance value of the environment where the device is located
      allOf:
        - $ref: "#/components/schemas/Device.BaseDevice"
    Device.Curtain:
      type: object
      required:
        - deviceType
      properties:
        deviceType:
          type: string
          enum:
            - Curtain
          description: device type
      allOf:
        - $ref: "#/components/schemas/Device.BaseCurtain"
    Device.Curtain3:
      type: object
      required:
        - deviceType
      properties:
        deviceType:
          type: string
          enum:
            - Curtain3
          description: device type
      allOf:
        - $ref: "#/components/schemas/Device.BaseCurtain"
    Device.HubRelated:
      type: object
      required:
        - deviceType
      properties:
        deviceType:
          type: string
          enum:
            - Hub
            - Hub Plus
            - Hub Mini
            - Hub 2
          description: device type
      allOf:
        - $ref: "#/components/schemas/Device.BaseDevice"
    Device.Humidifier:
      type: object
      required:
        - deviceType
        - humidityLevel
        - powerState
      properties:
        deviceType:
          type: string
          enum:
            - Humidifier
          description: device type
        humidityLevel:
          type: number
          description: current humidity level setting
        powerState:
          type: string
          enum:
            - on
            - off
          description: current power state of the humidifier
      allOf:
        - $ref: "#/components/schemas/Device.BaseDevice"
    Device.Lock:
      type: object
      required:
        - deviceType
        - lockState
      properties:
        deviceType:
          type: string
          enum:
            - Lock
          description: device type
        lockState:
          type: string
          enum:
            - locked
            - unlocked
          description: determines if the device is locked
      allOf:
        - $ref: "#/components/schemas/Device.BaseDevice"
    Device.Meter:
      type: object
      required:
        - deviceType
        - temperature
        - humidity
      properties:
        deviceType:
          type: string
          enum:
            - Meter
          description: device type
        temperature:
          type: number
          description: temperature value of the environment where the device is located
        humidity:
          type: number
          description: humidity level in the environment where the device is located
      allOf:
        - $ref: "#/components/schemas/Device.BaseDevice"
    Device.MeterPlus:
      type: object
      required:
        - deviceType
        - temperature
        - humidity
        - luminance
      properties:
        deviceType:
          type: string
          enum:
            - MeterPlus
          description: device type
        temperature:
          type: number
          description: temperature value of the environment where the device is located
        humidity:
          type: number
          description: humidity level in the environment where the device is located
        luminance:
          type: number
          description: luminance value of the environment where the device is located
      allOf:
        - $ref: "#/components/schemas/Device.BaseDevice"
    Device.MotionSensor:
      type: object
      required:
        - deviceType
        - motionDetected
        - movementCount
        - luminance
      properties:
        deviceType:
          type: string
          enum:
            - MotionSensor
          description: device type
        motionDetected:
          type: boolean
          description: detected motion status
        movementCount:
          type: number
          description: detected movement count
        luminance:
          type: number
          description: luminance value of the environment where the device is located
      allOf:
        - $ref: "#/components/schemas/Device.BaseDevice"
    Device.Plug:
      type: object
      required:
        - deviceType
        - powerState
      properties:
        deviceType:
          type: string
          enum:
            - Plug
          description: device type
        powerState:
          type: string
          enum:
            - on
            - off
          description: determines if the plug is on or off
      allOf:
        - $ref: "#/components/schemas/Device.BaseDevice"
    Device.Remote:
      type: object
      required:
        - deviceType
      properties:
        deviceType:
          type: string
          enum:
            - Remote
          description: device type
      allOf:
        - $ref: "#/components/schemas/Device.BaseDevice"
    Device.Thermostat:
      type: object
      required:
        - deviceType
        - temperatureSetting
        - mode
      properties:
        deviceType:
          type: string
          enum:
            - Thermostat
          description: device type
        temperatureSetting:
          type: number
          description: current temperature setting
        mode:
          type: string
          enum:
            - heat
            - cool
            - auto
            - off
          description: current mode of the thermostat
      allOf:
        - $ref: "#/components/schemas/Device.BaseDevice"
    DeviceControl.BotCommand:
      type: object
      required:
        - commandType
        - command
      properties:
        commandType:
          type: string
          enum:
            - command
        command:
          type: string
          enum:
            - turnOff
            - turnOn
            - press
    DeviceControl.CameraCommand:
      type: object
      required:
        - commandType
        - command
      properties:
        commandType:
          type: string
          enum:
            - command
        command:
          type: string
          enum:
            - startRecording
            - stopRecording
            - capturePhoto
    DeviceControl.CommandNotSupportedErrorResponseBody:
      type: object
      allOf:
        - type: object
          required:
            - statusCode
            - message
            - body
          properties:
            statusCode:
              type: number
              enum:
                - 160
            message:
              type: string
              enum:
                - command is not supported
            body:
              nullable: true
      description: Command is not supported
    DeviceControl.ContactSensorCommand:
      type: object
      required:
        - commandType
        - command
      properties:
        commandType:
          type: string
          enum:
            - command
        command:
          type: string
          enum:
            - reset
    DeviceControl.DeviceNotFoundErrorResponseBody:
      type: object
      allOf:
        - type: object
          required:
            - statusCode
            - message
            - body
          properties:
            statusCode:
              type: number
              enum:
                - 152
            message:
              type: string
              enum:
                - device not found
            body:
              nullable: true
      description: Device not found
    DeviceControl.DeviceOfflineErrorResponseBody:
      type: object
      allOf:
        - type: object
          required:
            - statusCode
            - message
            - body
          properties:
            statusCode:
              type: number
              enum:
                - 161
            message:
              type: string
              enum:
                - device offline
            body:
              nullable: true
      description: Device offline
    DeviceControl.DeviceTypeErrorResponseBody:
      type: object
      allOf:
        - type: object
          required:
            - statusCode
            - message
            - body
          properties:
            statusCode:
              type: number
              enum:
                - 151
            message:
              type: string
              enum:
                - device type error
            body:
              nullable: true
      description: Device internal error due to device states not synchronized with server
    DeviceControl.HubDeviceOfflineErrorResponseBody:
      type: object
      allOf:
        - type: object
          required:
            - statusCode
            - message
            - body
          properties:
            statusCode:
              type: number
              enum:
                - 171
            message:
              type: string
              enum:
                - hub device is offline
            body:
              nullable: true
      description: Hub device is offline
    DeviceControl.HubRelatedCommand:
      type: object
      required:
        - commandType
        - command
      properties:
        commandType:
          type: string
          enum:
            - command
        command:
          type: string
          enum:
            - turnOff
            - turnOn
            - setVolume
        parameter:
          type: string
          description: "Volume level: 0~100"
    DeviceControl.HumidifierCommand:
      type: object
      required:
        - commandType
        - command
      properties:
        commandType:
          type: string
          enum:
            - command
        command:
          type: string
          enum:
            - turnOff
            - turnOn
            - setHumidity
        parameter:
          type: string
          description: "Humidity level: 0~100"
    DeviceControl.LockCommand:
      type: object
      required:
        - commandType
        - command
      properties:
        commandType:
          type: string
          enum:
            - command
        command:
          type: string
          enum:
            - lock
            - unlock
    DeviceControl.MeterCommand:
      type: object
      required:
        - commandType
        - command
      properties:
        commandType:
          type: string
          enum:
            - command
        command:
          type: string
          enum:
            - update
    DeviceControl.MeterPlusCommand:
      type: object
      required:
        - commandType
        - command
      properties:
        commandType:
          type: string
          enum:
            - command
        command:
          type: string
          enum:
            - update
    DeviceControl.MotionSensorCommand:
      type: object
      required:
        - commandType
        - command
      properties:
        commandType:
          type: string
          enum:
            - command
        command:
          type: string
          enum:
            - reset
    DeviceControl.PlugCommand:
      type: object
      required:
        - commandType
        - command
      properties:
        commandType:
          type: string
          enum:
            - command
        command:
          type: string
          enum:
            - turnOff
            - turnOn
    DeviceControl.RemoteCommand:
      type: object
      required:
        - commandType
        - command
      properties:
        commandType:
          type: string
          enum:
            - command
        command:
          type: string
          enum:
            - turnOff
            - turnOn
    DeviceStatus.BaseDeviceStatus:
      type: object
      required:
        - deviceId
        - hubDeviceId
      properties:
        deviceId:
          type: string
          description: device ID
        hubDeviceId:
          type: string
          description: device's parent Hub ID
        deviceType:
          type: string
          description: Discriminator property for BaseDeviceStatus.
      discriminator:
        propertyName: deviceType
        mapping:
          Curtain: "#/components/schemas/DeviceStatus.CurtainStatus"
          Hub: "#/components/schemas/DeviceStatus.HubRelatedStatus"
          Hub Plus: "#/components/schemas/DeviceStatus.HubRelatedStatus"
          Hub Mini: "#/components/schemas/DeviceStatus.HubRelatedStatus"
          Hub 2: "#/components/schemas/DeviceStatus.HubRelatedStatus"
          Meter: "#/components/schemas/DeviceStatus.MeterStatus"
          MotionSensor: "#/components/schemas/DeviceStatus.MotionSensorStatus"
          ContactSensor: "#/components/schemas/DeviceStatus.ContactSensorStatus"
          Lock: "#/components/schemas/DeviceStatus.LockStatus"
          Plug: "#/components/schemas/DeviceStatus.PlugStatus"
          Remote: "#/components/schemas/DeviceStatus.RemoteStatus"
          Thermostat: "#/components/schemas/DeviceStatus.ThermostatStatus"
          Camera: "#/components/schemas/DeviceStatus.CameraStatus"
          Humidifier: "#/components/schemas/DeviceStatus.HumidifierStatus"
    DeviceStatus.BotStatus:
      type: object
      required:
        - deviceType
        - power
        - battery
        - version
        - deviceMode
      properties:
        deviceType:
          type: string
          enum:
            - Bot
          description: device type
        power:
          type: string
          enum:
            - ON
            - OFF
          description: ON/OFF state
        battery:
          type: number
          minimum: 0
          maximum: 100
          description: the current battery level, 0-100
        version:
          type: string
          description: the current firmware version, e.g. V6.3
        deviceMode:
          type: string
          enum:
            - pressMode
            - switchMode
            - customizeMode
          description: pressMode, switchMode, or customizeMode
      allOf:
        - $ref: "#/components/schemas/DeviceStatus.BaseDeviceStatus"
    DeviceStatus.CameraStatus:
      type: object
      required:
        - deviceType
        - status
        - fieldOfView
        - version
      properties:
        deviceType:
          type: string
          enum:
            - Camera
          description: device type
        status:
          type: string
          enum:
            - Online
            - Offline
          description: current status of the camera
        fieldOfView:
          type: number
          description: field of view of the camera in degrees
        version:
          type: string
          description: the current firmware version, e.g. V5.1
      allOf:
        - $ref: "#/components/schemas/DeviceStatus.BaseDeviceStatus"
    DeviceStatus.ContactSensorStatus:
      type: object
      required:
        - deviceType
        - open
        - moveDetected
        - luminance
        - battery
        - version
      properties:
        deviceType:
          type: string
          enum:
            - ContactSensor
          description: device type
        open:
          type: boolean
          description: detected open status
        moveDetected:
          type: boolean
          description: detected move status
        luminance:
          type: number
          description: luminance value of the environment where the device is located
        battery:
          type: number
          minimum: 0
          maximum: 100
          description: the current battery level, 0-100
        version:
          type: string
          description: the current firmware version, e.g. V1.3
      allOf:
        - $ref: "#/components/schemas/DeviceStatus.BaseDeviceStatus"
    DeviceStatus.CurtainStatus:
      type: object
      required:
        - deviceType
        - calibrate
        - group
        - moving
        - battery
        - version
        - slidePosition
      properties:
        deviceType:
          type: string
          enum:
            - Curtain
          description: device type
        calibrate:
          type: boolean
          description: determines if the open position and the close position of a device have been properly calibrated or not
        group:
          type: boolean
          description: determines if a Curtain is paired with or grouped with another Curtain or not
        moving:
          type: boolean
          description: determines if a Curtain is moving or not
        battery:
          type: number
          minimum: 0
          maximum: 100
          description: the current battery level, 0-100
        version:
          type: string
          description: the current firmware version, e.g. V4.2
        slidePosition:
          type: string
          description: the percentage of the distance between the calibrated open position and closed position that Curtain has traversed
      allOf:
        - $ref: "#/components/schemas/DeviceStatus.BaseDeviceStatus"
    DeviceStatus.HubRelatedStatus:
      type: object
      required:
        - deviceType
        - version
      properties:
        deviceType:
          type: string
          enum:
            - Hub
            - Hub Plus
            - Hub Mini
            - Hub 2
          description: device type
        version:
          type: string
          description: the current firmware version, e.g. V3.1
      allOf:
        - $ref: "#/components/schemas/DeviceStatus.BaseDeviceStatus"
    DeviceStatus.HumidifierStatus:
      type: object
      required:
        - deviceType
        - humidityLevel
        - powerState
        - battery
        - version
      properties:
        deviceType:
          type: string
          enum:
            - Humidifier
          description: device type
        humidityLevel:
          type: number
          description: current humidity level setting
        powerState:
          type: string
          enum:
            - on
            - off
          description: current power state of the humidifier
        battery:
          type: number
          minimum: 0
          maximum: 100
          description: the current battery level, 0-100
        version:
          type: string
          description: the current firmware version, e.g. V2.9
      allOf:
        - $ref: "#/components/schemas/DeviceStatus.BaseDeviceStatus"
    DeviceStatus.LockStatus:
      type: object
      required:
        - deviceType
        - lockState
        - battery
        - version
      properties:
        deviceType:
          type: string
          enum:
            - Lock
          description: device type
        lockState:
          type: string
          enum:
            - locked
            - unlocked
          description: determines if the device is locked
        battery:
          type: number
          minimum: 0
          maximum: 100
          description: the current battery level, 0-100
        version:
          type: string
          description: the current firmware version, e.g. V1.7
      allOf:
        - $ref: "#/components/schemas/DeviceStatus.BaseDeviceStatus"
    DeviceStatus.MeterPlusStatus:
      type: object
      required:
        - deviceType
        - luminance
      properties:
        deviceType:
          type: string
          enum:
            - MeterPlus
          description: device type
        luminance:
          type: number
          description: luminance value of the environment where the device is located
      allOf:
        - type: object
          required:
            - temperature
            - humidity
            - battery
            - version
            - deviceId
            - hubDeviceId
          properties:
            temperature:
              type: number
              description: temperature value of the environment where the device is located
            humidity:
              type: number
              description: humidity level in the environment where the device is located
            battery:
              type: number
              minimum: 0
              maximum: 100
              description: the current battery level, 0-100
            version:
              type: string
              description: the current firmware version, e.g. V2.5
            deviceId:
              type: string
              description: device ID
            hubDeviceId:
              type: string
              description: device's parent Hub ID
          description: The template for omitting properties.
    DeviceStatus.MeterStatus:
      type: object
      required:
        - deviceType
        - temperature
        - humidity
        - battery
        - version
      properties:
        deviceType:
          type: string
          enum:
            - Meter
          description: device type
        temperature:
          type: number
          description: temperature value of the environment where the device is located
        humidity:
          type: number
          description: humidity level in the environment where the device is located
        battery:
          type: number
          minimum: 0
          maximum: 100
          description: the current battery level, 0-100
        version:
          type: string
          description: the current firmware version, e.g. V2.5
      allOf:
        - $ref: "#/components/schemas/DeviceStatus.BaseDeviceStatus"
    DeviceStatus.MotionSensorStatus:
      type: object
      required:
        - deviceType
        - motionDetected
        - movementCount
        - luminance
        - battery
        - version
      properties:
        deviceType:
          type: string
          enum:
            - MotionSensor
          description: device type
        motionDetected:
          type: boolean
          description: detected motion status
        movementCount:
          type: number
          description: detected movement count
        luminance:
          type: number
          description: luminance value of the environment where the device is located
        battery:
          type: number
          minimum: 0
          maximum: 100
          description: the current battery level, 0-100
        version:
          type: string
          description: the current firmware version, e.g. V1.8
      allOf:
        - $ref: "#/components/schemas/DeviceStatus.BaseDeviceStatus"
    DeviceStatus.PlugStatus:
      type: object
      required:
        - deviceType
        - powerState
        - version
      properties:
        deviceType:
          type: string
          enum:
            - Plug
          description: device type
        powerState:
          type: string
          enum:
            - on
            - off
          description: determines if the plug is on or off
        version:
          type: string
          description: the current firmware version, e.g. V2.2
      allOf:
        - $ref: "#/components/schemas/DeviceStatus.BaseDeviceStatus"
    DeviceStatus.RemoteStatus:
      type: object
      required:
        - deviceType
        - version
      properties:
        deviceType:
          type: string
          enum:
            - Remote
          description: device type
        version:
          type: string
          description: the current firmware version, e.g. V3.0
      allOf:
        - $ref: "#/components/schemas/DeviceStatus.BaseDeviceStatus"
    DeviceStatus.ThermostatStatus:
      type: object
      required:
        - deviceType
        - temperatureSetting
        - mode
        - battery
        - version
      properties:
        deviceType:
          type: string
          enum:
            - Thermostat
          description: device type
        temperatureSetting:
          type: number
          description: current temperature setting
        mode:
          type: string
          enum:
            - heat
            - cool
            - auto
            - off
          description: current mode of the thermostat
        battery:
          type: number
          minimum: 0
          maximum: 100
          description: the current battery level, 0-100
        version:
          type: string
          description: the current firmware version, e.g. V4.5
      allOf:
        - $ref: "#/components/schemas/DeviceStatus.BaseDeviceStatus"
    SharedErrors.BadRequestResponse:
      type: object
      allOf:
        - type: object
          required:
            - body
          properties:
            body:
              type: object
              properties:
                statusCode:
                  nullable: true
                message:
                  type: string
                  enum:
                    - Bad Request
                body:
                  nullable: true
              required:
                - statusCode
                - message
                - body
      description: The client has issued an invalid request. This is commonly used to specify validation errors in a request payload.
    SharedErrors.ForbiddenResponse:
      type: object
      allOf:
        - type: object
          required:
            - body
          properties:
            body:
              type: object
              properties:
                statusCode:
                  nullable: true
                message:
                  type: string
                  enum:
                    - Forbidden
                body:
                  nullable: true
              required:
                - statusCode
                - message
                - body
      description: Http 403 Error. User permission is denied due to invalid token.
    SharedErrors.InternalServerErrorResponse:
      type: object
      allOf:
        - type: object
          required:
            - body
          properties:
            body:
              type: object
              properties:
                statusCode:
                  nullable: true
                message:
                  type: string
                  enum:
                    - Internal Server Error
                body:
                  nullable: true
              required:
                - statusCode
                - message
                - body
      description: Http 500 Error. An unexpected error on the SmartThings servers has occurred. These errors should be rare.
    SharedErrors.NotAcceptableResponse:
      type: object
      allOf:
        - type: object
          required:
            - body
          properties:
            body:
              type: object
              properties:
                statusCode:
                  nullable: true
                message:
                  type: string
                  enum:
                    - Not Acceptable
                body:
                  nullable: true
              required:
                - statusCode
                - message
                - body
      description: Http 406 Error. The client has requested a MIME type via the Accept header for a value not supported by the server.
    SharedErrors.NotFoundResponse:
      type: object
      allOf:
        - type: object
          required:
            - body
          properties:
            body:
              type: object
              properties:
                statusCode:
                  nullable: true
                message:
                  type: string
                  enum:
                    - Not Found
                body:
                  nullable: true
              required:
                - statusCode
                - message
                - body
      description: Http 404 Error. The requested resource is not found.
    SharedErrors.TooManyRequestsResponse:
      type: object
      allOf:
        - type: object
          required:
            - body
          properties:
            body:
              type: object
              properties:
                statusCode:
                  nullable: true
                message:
                  type: string
                  enum:
                    - Too Many Requests
                body:
                  nullable: true
              required:
                - statusCode
                - message
                - body
      description: Http 429 Error. The client has exceeded the number of requests allowed for a given time window.
    SharedErrors.UnauthorizedResponse:
      type: object
      allOf:
        - type: object
          required:
            - body
          properties:
            body:
              type: object
              properties:
                statusCode:
                  nullable: true
                message:
                  type: string
                  enum:
                    - Unauthorized
                body:
                  nullable: true
              required:
                - statusCode
                - message
                - body
      description: Http 401 Error. User permission is denied due to invalid token.
    SharedErrors.UnprocessableEntityResponse:
      type: object
      allOf:
        - type: object
          required:
            - body
          properties:
            body:
              type: object
              properties:
                statusCode:
                  nullable: true
                message:
                  type: string
                  enum:
                    - Unprocessable Entity
                body:
                  nullable: true
              required:
                - statusCode
                - message
                - body
      description: Http 422 Error. The client has made a valid request, but the server cannot process it. This is often used for APIs for which certain limits have been exceeded.
    SharedErrors.UnsupportedMediaTypeResponse:
      type: object
      allOf:
        - type: object
          required:
            - body
          properties:
            body:
              type: object
              properties:
                statusCode:
                  nullable: true
                message:
                  type: string
                  enum:
                    - Unsupported Media Type
                body:
                  nullable: true
              required:
                - statusCode
                - message
                - body
      description: Http 415 Error. The client has defined a contentType header that is not supported by the server.
    SystemErrorResponseBody:
      type: object
      allOf:
        - type: object
          required:
            - statusCode
            - message
            - body
          properties:
            statusCode:
              type: number
              enum:
                - 190
            message:
              type: string
              enum:
                - System error
            body:
              nullable: true
      description: Device internal error due to device states not synchronized with server
servers:
  - url: https://api.switch-bot.com
    description: Single server endpoint
    variables: {}
